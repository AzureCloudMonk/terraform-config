#!/usr/bin/env bash
set -o errexit
set -o pipefail

main() {
  local halp='^(-h|--help|help)$'
  for arg in "${@}"; do
    if [[ "${arg}" =~ $halp ]]; then
      __usage
      exit 0
    fi
  done

  if [[ $# -lt 3 ]]; then
    __usage
    exit 1
  fi

  [[ "${HEROKU_API_KEY}" ]] || {
    echo "Missing \$HEROKU_API_KEY" >&2
    exit 2
  }

  local repo_slug="${1}"
  local heroku_app="${2}"
  local ps_scale="${3}"
  local version="${4:-master}"

  __heroku_wait "${heroku_app}"
  __heroku_deploy "${repo_slug}" "${heroku_app}" "${version}"
  __heroku_scale "${heroku_app}" "${ps_scale}"
}

__heroku_wait() {
  local heroku_app="${1}"
  local timeout="${2:-120}"
  local c=0

  while ! __heroku_curl -fs "https://api.heroku.com/apps/${heroku_app}"; do
    let c+=10
    if [[ $c -gt ${timeout} ]]; then
      exit 1
    fi
    sleep 10
  done
}

__heroku_deploy() {
  local repo_slug="${1}"
  local heroku_app="${2}"
  local version="${3}"
  local tmp_dir
  tmp_dir="$(mktemp -d)"
  trap 'rm -rf '"${tmp_dir}" EXIT QUIT INT TERM

  printf "\nDeploying %s %s to %s\n" \
    "${repo_slug}" "${version}" "${heroku_app}"

  __make_deploy_request "${repo_slug}" "${heroku_app}" "${version}" \
    | tee "${tmp_dir}/deploy.json"

  local output_stream_url
  output_stream_url="$(jq -r .output_stream_url <"${tmp_dir}/deploy.json")"

  printf "\nStreaming deploy output\n"
  __heroku_curl -f "${output_stream_url}"
}

__make_deploy_request() {
  local repo_slug="${1}"
  local heroku_app="${2}"
  local version="${3}"

  __heroku_curl -s -X POST "https://api.heroku.com/apps/${heroku_app}/builds" \
    -d "{
      \"source_blob\": {
        \"url\": \"https://github.com/${repo_slug}/archive/master.tar.gz\",
        \"version\": \"${version}\"
      }
    }"
}

__heroku_scale() {
  local heroku_app="${1}"
  local ps_scale="${2}"
  local formation_type="${ps_scale%%=*}"
  local formation_scale="${ps_scale##*=}"
  local formation_scale_qty="${formation_scale%%:*}"
  local formation_scale_size="${formation_scale##*:}"

  __heroku_curl -s -X PATCH -d "{
      \"quantity\": ${formation_scale_qty},
      \"size\": \"${formation_scale_size}\"
    }" \
    "https://api.heroku.com/apps/${heroku_app}/formation/${formation_type}"
}

__heroku_curl() {
  curl \
    -n \
    -H "Authorization: Bearer ${HEROKU_API_KEY}" \
    -H "Content-Type: application/json" \
    -H "Accept: application/vnd.heroku+json; version=3" \
    "${@}"
}

__usage() {
  local prog
  prog="$(basename "${0}")"
  echo "Usage: ${prog} <slug> <app> <scale> [version]" >&2
  echo >&2
  echo "Deploy Heroku app named <app> from GitHub repo with <slug>" >&2
  echo "at dyno <scale>, optionally at a specific [version], e.g.:" >&2
  echo >&2
  echo "${prog} travis-ci/flurb travis-flurb-prod web=1:Hobby fafafaf" >&2
}

main "${@}"
