#!/usr/bin/env bash
set -o errexit

main() {
  [[ "${SLACK_WEBHOOK}" ]] || {
    echo 'Missing SLACK_WEBHOOK variable'
    exit 1
  }

  local graphname
  graphname="$(basename "$(pwd)")"

  if [[ "${graphname}" != *production* ]] && [[ "${graphname}" != *2* ]]; then
    echo "Skipping Slack notification for '${graphname}'"
    exit 0
  fi

  local formatted_text
  formatted_text="$(__format_text "$(ps -o args= "${PPID}")" "${graphname}")"
  payload='{
    "channel": "#infra-terraform",
    "username": "terraform-config",
    "text": "'"${formatted_text}"'",
    "icon_emoji": ":terraform:"
  }'

  echo "Sending Slack notification for ${graphname}... "
  curl -X POST --data-urlencode "payload=${payload}" "${SLACK_WEBHOOK}"
}

__format_text() {
  local cmd="${1}"
  local graphname="${2}"
  local user="${SLACK_USER:-$USER}"

  cat <<EOF
*terraform action* :peridot-spin:
  ${user} ran \`${cmd}\` in \`${graphname}\`
  on: \`$(__git_branch_at_commit)\`$(__format_dirty_files)
EOF
}

__format_dirty_files() {
  local diff_names
  diff_names="$(__git_diff_names | LC_ALL=C sort | uniq)"
  if [[ "${diff_names}" ]]; then
    cat <<EOF

  dirty files: \`\`\`${diff_names}\`\`\`
EOF
  fi
}

__git_branch_at_commit() {
  printf "%s @ %s" "$(git rev-parse --abbrev-ref HEAD)" "$(git log --format='%h' -1)"
}

__git_diff_names() {
  pushd "$(git rev-parse --show-toplevel)" &>/dev/null
  git diff --name-only
  git diff --cached --name-only
  popd &>/dev/null
}

main "${@}"
